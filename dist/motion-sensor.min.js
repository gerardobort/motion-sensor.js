if ('https:' !== window.location.protocol && window.location.host.match(/github\.io/)) {
    window.location.protocol = 'https:';
}
!function(a,b){var c=function(a){this.options=a,this.canvas=b.createElement("canvas"),this.canvas.style.webkitTransform="scaleX(-1)",this.video=b.createElement("video"),this.video.autoplay="true",this.video.style.display="none",this.videoScale=this.options.videoScale||1,this.VIDEO_WIDTH=640*this.videoScale,this.VIDEO_HEIGHT=480*this.videoScale,this.canvas.width=this.VIDEO_WIDTH,this.canvas.height=this.VIDEO_HEIGHT,this.video.width=this.VIDEO_WIDTH,this.video.height=this.VIDEO_HEIGHT,this.setScale(a.initialScale||.25);var c=b.getElementsByTagName("body")[0];if(c.appendChild(this.canvas),c.appendChild(this.video),this.canvasContext=this.canvas.getContext("2d"),a.totalBuffers<2)throw"MotionSensor: Wrong setting: totalBuffers must be 2 or higher.";a.totalBuffers<3&&console.log("MotionSensor: Warning: It's not possible to compute cluster directions when using 2 buffers."),this.imageDataBuffersN=a.totalBuffers,this.imageDataBuffers=[];for(var d=0,e=this.imageDataBuffersN;e>d;d++)this.imageDataBuffers.push(this.canvasContext.createImageData(this.VIDEO_WIDTH,this.VIDEO_HEIGHT));this.attachedEvents={},this.processorConstructor=a.processor||this.constructor.Processor,this.performanceController=new this.constructor.PerformanceController(this)};c.prototype.start=function(){var a=this;a.processor=new a.processorConstructor(a),navigator.webkitGetUserMedia({video:!0},function(b){a.video.src=webkitURL.createObjectURL(b),webkitRequestAnimationFrame(a.updateCanvas.bind(a)),console.log("MotionSensor started."),a.trigger("start",[a.canvas,a.canvasContext])},function(){throw"MotionSensor error during webcam initialization."})},c.prototype.setScale=function(a){this.scale=a},c.prototype.updateCanvas=function(){var a=this;a.canvasContext.drawImage(a.video,0,0,this.VIDEO_WIDTH,this.VIDEO_HEIGHT),a.originalImageData=a.canvasContext.getImageData(0,0,this.VIDEO_WIDTH,this.VIDEO_HEIGHT);for(var b=0,c=a.imageDataBuffersN-1;c>b;b++)a.imageDataBuffers[b]=a.imageDataBuffers[b+1];a.imageDataBuffers[c]=a.canvasContext.createImageData(this.VIDEO_WIDTH,this.VIDEO_HEIGHT),a.imageDataBuffers[c].data.set(a.originalImageData.data),a.processor.processCircularBuffer(a.originalImageData,a.imageDataBuffers),a.performanceController.setFrameMark(),a.performanceController.control(),webkitRequestAnimationFrame(a.updateCanvas.bind(a))},c.prototype.on=function(a,b){this.attachedEvents[a]||(this.attachedEvents[a]=[]),this.attachedEvents[a].push(b)},c.prototype.trigger=function(a,b){if(this.attachedEvents[a])for(var c=0;c<this.attachedEvents[a].length;c++)if(!1===this.attachedEvents[a][c].apply(b[0]||this,b))return},a.MotionSensor=c}(window,document),function(a){a.Vector2=function(a,b){this.x=a,this.y=b},a.Vector2.prototype.getDistance=function(a){return Math.sqrt(Math.pow(this.x-a.x,2)+Math.pow(this.y-a.y,2))}}(MotionSensor),function(a){a.Vector3=function(a,b,c){this.x=a,this.y=b,this.z=c},a.Vector3.prototype.getDistance=function(a){return Math.sqrt(Math.pow(this.x-a.x,2)+Math.pow(this.y-a.y,2)+Math.pow(this.z-a.z,2))},a.Vector3.prototype.dotProduct=function(a){this.x*=a,this.y*=a,this.z*=a}}(MotionSensor),function(a){a.Vector4=function(a,b,c,d){this.x=a,this.y=b,this.z=c,this.t=d},a.Vector4.prototype.getDistance=function(a){var b=Math.sqrt(Math.pow(this.x-a.x,2)+Math.pow(this.y-a.y,2)),c=Math.sqrt(Math.pow(this.z-a.z,2)+Math.pow(this.t-a.t,2));return Math.sqrt(.1*Math.pow(b,2)+Math.pow(c,2))},a.Vector4.prototype.dotProduct=function(a){this.x*=a,this.y*=a,this.z*=a,this.t*=a}}(MotionSensor),function(a){a.Pixel=function(a,b){this.position=a,this.color=b}}(MotionSensor),function(a){a.PerformanceController=function(a){this.motionSensor=a,this.timeMarksN=60,this.timeMarks=[0,0,0,0,0,0],this.votes=0,this.EXPECTED_FPS=30,this.fpsByScale={}},a.PerformanceController.prototype.setFrameMark=function(){for(var a=0,b=this.timeMarksN-1;b>a;a++)this.timeMarks[a]=this.timeMarks[a+1];this.timeMarks[this.timeMarksN-1]=Date.now()},a.PerformanceController.prototype.getFPS=function(){for(var a=0,b=0,c=this.timeMarksN-1;c>b;b++)a+=(this.timeMarks[b+1]-this.timeMarks[b])/1e3/c;return fps=Math.floor(1/a*100)/100,this.fpsByScale[this.motionSensor.scale.toString()]=fps,fps},a.PerformanceController.prototype.control=function(){var a=this.getFPS();if(a<this.EXPECTED_FPS?this.votes--:this.votes++,this.motionSensor.trigger("fps:change",[a,this.motionSensor.scale]),this.motionSensor.options.fpsControlEnabled){var b;this.votes<-90?b=this.motionSensor.scale-.25:this.votes>90&&(b=this.motionSensor.scale+.25),(b&&!this.fpsByScale[b]||Math.abs(this.fpsByScale[b]-this.EXPECTED_FPS)<Math.abs(this.fpsByScale[this.motionSensor.scale]-this.EXPECTED_FPS))&&(console.log("MotionSensor: switch to scale",b," - fps map",this.fpsByScale),this.motionSensor.setScale(b),this.votes=0)}}}(MotionSensor),function(a){a.Cluster=function(a){for(k in a)a.hasOwnProperty(k)&&(this[k]=a[k])},a.Cluster.randomPointColors=[];for(var b,c,e,f=0;100>f;f++)b=Math.floor(255*Math.random()),c=Math.floor(255*Math.random()),e=Math.floor(255*Math.random()),a.Cluster.randomPointColors.push("rgba("+b+", "+c+", "+e+", 0.6)");a.Cluster.upsertArrayFromPoints=function(b,c,e,g,h){{var i,j,k,m,n,o,p,q=e,r=d=0,s=0,t=[],u=0,v=3,w=70;VIDEO_WIDTH=g.VIDEO_WIDTH,VIDEO_HEIGHT=g.VIDEO_HEIGHT}for(p=0;q>p;p++)if(o=b[p]){var x=new a.Pixel(o.centroid,o.rgbFloat);c=c.concat([x,x,x])}for(u=0;v>u;u++){for(p=0;q>p;p++)0===u?b[p]?(b[p].rgbFloat.dotProduct(.8),t.push(b[p])):(j=Math.floor(Math.random()*VIDEO_WIDTH),k=Math.floor(Math.random()*VIDEO_HEIGHT),2===h&&(m=Math.random(),n=Math.random()),t.push(new a.Cluster({id:p,centroid:2!==h?new a.Vector2(j,k):new a.Vector4(j,k,m,n),versor:new a.Vector2(1,0),modulus:0,points:[],pixels:[],boundaryPointIndices:[],acum:[0,0],rgbFloat:new a.Vector3(0,0,0),debugColor:a.Cluster.randomPointColors[p]}))):(t[p].centroid.x=t[p].acum[0]/t[p].points.length,t[p].centroid.y=t[p].acum[1]/t[p].points.length,t[p].points=[],t[p].pixels=[],t[p].boundaryPointIndices=[],t[p].acum=[0,0]);for(f=0,l=c.length;l>f;f++)if(i=c[f]){for(r=Number.MAX_VALUE,s=0,p=0;q>p;p++)(d=i.position.getDistance(t[p].centroid))<r&&(r=d,s=p);(u!==v-1||w>r)&&t[s]&&(t[s].points.push(i.position),t[s].pixels.push(i),t[s].acum[0]+=i.position.x,t[s].acum[1]+=i.position.y,t[s].rgbFloat.x+=i.color.x/l,t[s].rgbFloat.y+=i.color.y/l,t[s].rgbFloat.z+=i.color.z/l)}}return t}}(MotionSensor),function(a){var b=function(a,b,c){return Math.sqrt(Math.pow(a[c+0]-b[c+0],2)+Math.pow(a[c+1]-b[c+1],2)+Math.pow(a[c+2]-b[c+2],2))};a.Processor=function(a){this.motionSensor=a,this.context=a.canvasContext,this.i=0,this.clustersBuffer=[],this.convexHull=new a.constructor.ConvexHull,this.superClustersBuffer=[]},a.Processor.prototype.processCircularBuffer=function(c,d){this.i++;var e=d.length,f=this.context,g=c,h=(g.data,d[e-1]),i=h.data,j=i.length,k=50,l=Math.floor(2/this.motionSensor.scale),m=120,n=0,o=u=x=y=0,p=VIDEO_WIDTH=this.motionSensor.VIDEO_WIDTH,q=(VIDEO_HEIGHT=this.motionSensor.VIDEO_HEIGHT,this.motionSensor.options.totalClusters),r=[],s=[];for(o=0;j>o;o+=4){n=255;for(var t=0,u=e-1;u>t;t++)b(d[t].data,d[t+1].data,o)<k&&(n-=255/u);x=o/4%p,y=parseInt(o/4/p),this.i>e&&!(x%l)&&!(y%l)&&n>m&&(this.motionSensor.options.debug&&(i[o+3]=parseInt(n,10)),s.push(new a.Pixel(new a.Vector2(x,y),new a.Vector3(i[o+0],i[o+1],i[o+2]))))}r=a.Cluster.upsertArrayFromPoints(this.clustersBuffer,s,q,this.motionSensor),f.putImageData(d[e-1],0,0);for(var t=0,q=r.length;q>t;t++){var v=r[t];if(!(v.points.length<3)&&(v.boundaryPointIndices=this.convexHull.getGrahamScanPointIndices(v.points),v.boundaryPointIndices&&v.boundaryPointIndices.length>0)){var w,z,A,B,C,D,E,F,G=cy=countx=county=0,H=30,I=0;for(o=0,u=v.points.length;u>o;o++){for(x=v.points[o].x,y=v.points[o].y,D=d[e-2].data,lastpx=d[e-1].data,C=4*(y*p+x),E=[lastpx[C+0],lastpx[C+1],lastpx[C+2]],G=cy=0,A=0;H>A&&(w=x+A,C=4*(y*p+w),F=[D[C+0],D[C+1],D[C+2]],b(E,F,0)<50);A++)G++;for(A=0;A>-H&&(w=x+A,C=4*(y*p+w),F=[D[C+0],D[C+1],D[C+2]],b(E,F,0)<50);A--)G--;for(B=0;H>B&&(z=y+B,C=4*(z*p+x),F=[D[C+0],D[C+1],D[C+2]],b(E,F,0)<50);B++)cy++;for(B=0;B>-H&&(z=y+B,C=4*(z*p+x),F=[D[C+0],D[C+1],D[C+2]],b(E,F,0)<50);B--)cy--;countx+=G,county+=cy,I++}v.modulus=Math.sqrt(countx*countx+county*county),v.modulus?(v.versor.x=-countx/v.modulus,v.versor.y=-county/v.modulus):(v.versor.x=1,v.versor.y=0),v.modulus*=.006/Math.pow(this.motionSensor.scale,2),this.clustersBuffer[t]&&(v.centroid.x=.5*(v.centroid.x+this.clustersBuffer[t].centroid.x),v.centroid.y=.5*(v.centroid.y+this.clustersBuffer[t].centroid.y)),this.clustersBuffer[t]=v}}this.motionSensor.trigger("processor:compute",[this.clustersBuffer,this.context,1])}}(MotionSensor),function(a){var b=function(a,b,c){return Math.sqrt(Math.pow(a[c+0]-b[c+0],2)+Math.pow(a[c+1]-b[c+1],2)+Math.pow(a[c+2]-b[c+2],2))};a.Processor2ClusterLevels=function(a){this.motionSensor=a,this.context=a.canvasContext,this.i=0,this.clustersBuffer=[],this.convexHull=new a.constructor.ConvexHull,this.superClustersBuffer=[]},a.Processor2ClusterLevels.prototype.processCircularBuffer=function(c,d){this.i++;var e=d.length,f=this.context,g=c,h=(g.data,d[e-1]),i=h.data,j=i.length,k=50,l=Math.floor(2/this.motionSensor.scale),m=120,n=0,o=u=x=y=0,p=VIDEO_WIDTH=this.motionSensor.VIDEO_WIDTH,q=(VIDEO_HEIGHT=this.motionSensor.VIDEO_HEIGHT,this.motionSensor.options.totalClusters),r=[],s=[];for(o=0;j>o;o+=4){n=255;for(var t=0,u=e-1;u>t;t++)b(d[t].data,d[t+1].data,o)<k&&(n-=255/u);x=o/4%p,y=parseInt(o/4/p),this.i>e&&!(x%l)&&!(y%l)&&n>m&&(this.motionSensor.options.debug&&(i[o+3]=parseInt(n,10)),s.push(new a.Pixel(new a.Vector2(x,y),new a.Vector3(i[o+0],i[o+1],i[o+2]))))}r=a.Cluster.upsertArrayFromPoints(this.clustersBuffer,s,q,this.motionSensor),f.putImageData(d[e-1],0,0);for(var t=0,q=r.length;q>t;t++){var v=r[t];if(!(v.points.length<3)&&(v.boundaryPointIndices=this.convexHull.getGrahamScanPointIndices(v.points),v.boundaryPointIndices&&v.boundaryPointIndices.length>0)){var w,z,A,B,C,D,E,F,G=cy=countx=county=0,H=30,I=0;for(o=0,u=v.points.length;u>o;o++){for(x=v.points[o].x,y=v.points[o].y,D=d[e-2].data,lastpx=d[e-1].data,C=4*(y*p+x),E=[lastpx[C+0],lastpx[C+1],lastpx[C+2]],G=cy=0,A=0;H>A&&(w=x+A,C=4*(y*p+w),F=[D[C+0],D[C+1],D[C+2]],b(E,F,0)<50);A++)G++;for(A=0;A>-H&&(w=x+A,C=4*(y*p+w),F=[D[C+0],D[C+1],D[C+2]],b(E,F,0)<50);A--)G--;for(B=0;H>B&&(z=y+B,C=4*(z*p+x),F=[D[C+0],D[C+1],D[C+2]],b(E,F,0)<50);B++)cy++;for(B=0;B>-H&&(z=y+B,C=4*(z*p+x),F=[D[C+0],D[C+1],D[C+2]],b(E,F,0)<50);B--)cy--;countx+=G,county+=cy,I++}v.modulus=Math.sqrt(countx*countx+county*county),v.modulus?(v.versor.x=-countx/v.modulus,v.versor.y=-county/v.modulus):(v.versor.x=1,v.versor.y=0),v.modulus*=.006/Math.pow(this.motionSensor.scale,2),this.clustersBuffer[t]&&(v.centroid.x=.5*(v.centroid.x+this.clustersBuffer[t].centroid.x),v.centroid.y=.5*(v.centroid.y+this.clustersBuffer[t].centroid.y)),this.clustersBuffer[t]=v}}if(this.motionSensor.trigger("processor:compute",[this.clustersBuffer,this.context,1]),this.i>30){this.superPoints=this.clustersBuffer.map(function(b){return new a.Pixel(new a.Vector4(b.centroid.x,b.centroid.y,b.versor.x*b.modulus,b.versor.y*b.modulus),new a.Vector3(Math.floor(b.rgbFloat.x),Math.floor(b.rgbFloat.y),Math.floor(b.rgbFloat.z)))}),this.superClustersBuffer=a.Cluster.upsertArrayFromPoints(this.superClustersBuffer,this.superPoints,this.motionSensor.options.totalSuperCusters,this.motionSensor,2);var J=this;this.superClustersBuffer.forEach(function(a){a.boundaryPointIndices=J.convexHull.getGrahamScanPointIndices(a.points)}),this.motionSensor.trigger("processor:compute",[this.superClustersBuffer,this.context,2])}}}(MotionSensor),function(a){a.ConvexHull=function(){},a.ConvexHull.prototype.getGrahamScanPointIndices=function(a){if(this.indices=[],!(a.length<3)){this.points=a;for(var b=0,c=1;c<this.points.length;c++)this.points[c].y==this.points[b].y?this.points[c].x<this.points[b].x&&(b=c):this.points[c].y<this.points[b].y&&(b=c);var d=new Array,e=0,f=0;for(c=0;c<this.points.length;c++)c!=b&&(e=this.angle(b,c),0>e&&(e+=Math.PI),f=this.distance(b,c),d.push(new this.Point(c,e,f)));d.sort(function(a,b){return a.compare(b)});var g=new Array(this.points.length+1),h=2;for(c=0;c<this.points.length;c++)c!=b&&(g[h]=d[h-2].index,h++);g[0]=g[this.points.length],g[1]=b;var i,j=2;for(c=3;c<=this.points.length;c++){for(;this.ccw(g[j-1],g[j],g[c])<=0;)j--;j++,i=g[c],g[c]=g[j],g[j]=i}for(this.indices=new Array(j),c=0;j>c;c++)this.indices[c]=g[c+1];return this.indices}},a.ConvexHull.prototype.ccw=function(a,b,c){return this.points[a]&&this.points[b]&&this.points[c]?(this.points[b].x-this.points[a].x)*(this.points[c].y-this.points[a].y)-(this.points[b].y-this.points[a].y)*(this.points[c].x-this.points[a].x):void 0},a.ConvexHull.prototype.angle=function(a,b){return Math.atan((this.points[b].y-this.points[a].y)/(this.points[b].x-this.points[a].x))},a.ConvexHull.prototype.distance=function(a,b){return(this.points[b].x-this.points[a].x)*(this.points[b].x-this.points[a].x)+(this.points[b].y-this.points[a].y)*(this.points[b].y-this.points[a].y)},a.ConvexHull.prototype.Point=function(a,b,c){this.index=a,this.angle=b,this.distance=c,this.compare=function(a){return this.angle<a.angle?-1:this.angle>a.angle?1:this.distance<a.distance?-1:this.distance>a.distance?1:0}}}(MotionSensor);
